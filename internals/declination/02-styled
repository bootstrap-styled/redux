#!/usr/bin/env bash
set -ex
git checkout ${PREVIOUS_VERSION}
npm install
# remove docs dependencies before re-adding them
npm uninstall --save-dev styled-components
# start
npm run rollup-umd -- peer add styled-components*styled --singleton
npm run rollup-umd -- babel plugin babel-plugin-styled-components
cat > src/index.js << EOL
/**
 * Code your first module here
 */
import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';

// eslint-disable-next-line react/prefer-stateless-function
export class ReactDemo extends React.Component {
  static propTypes = {
    testProps: PropTypes.bool,
  }

  static defaultProps = {
    testProps: true,
  }

  render() {
    const { testProps, ...rest } = this.props;
    return (
      <div {...rest}>Hello {testProps}</div>
    );
  }
}

const ReactDemoStyled = styled(ReactDemo)\`
  width: auto;
\`;

export default ReactDemoStyled;

EOL
cat > src/tests/index.test.js << EOL
/**
 * Testing example
 */

import { shallow } from 'enzyme';
import React from 'react';
import ReactDemoStyled, { ReactDemo } from '../index';

describe('<ReactDemo />', () => {
  it('should render an <ReactDemo /> tag', () => {
    const renderedComponent = shallow(<ReactDemo />);
    expect(renderedComponent.length).toBe(1);
  });
});

describe('<ReactDemoStyled />', () => {
  it('should render an <ReactDemoStyled /> tag', () => {
    const renderedComponent = shallow(<ReactDemoStyled />);
    expect(renderedComponent.length).toBe(1);
  });
});

EOL
